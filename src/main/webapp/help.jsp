<!DOCTYPE html>
<html lang="en">
<%@page pageEncoding="UTF-8" contentType="text/html; charset=UTF-8"%>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Учебный эмулятор ЭВМ | Помощь</title>

	<link rel="stylesheet" href="css/styles.css">
	<link rel="stylesheet" href="css/bootstrap.min.css">
	<script type="text/javascript" src="js/script.js"></script>
	<script type="text/javascript" src="js/bootstrap.bundle.min.js"></script>
	<script type="text/javascript" src="js/jQuery_3.7.1.js"></script>
</head>
<body>
	<div class="container-xl">
		<div>
			<h3 style="text-align:center;">Библиотека команд эмулятора</h3>
			<table class="table">
				<caption>
					Результат выполнения любой команды записывается в аккумулятор
				</caption>
				<thead>
					<tr>
						<th scope="col">Команда</th>
						<th scope="col">Двоичный код</th>
						<th scope="col">Номер</th>
						<th scope="col">Мнемоника</th>
						<th scope="col">Пояснение</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>Сложение (целые)</td> <td>0000 0000 0001</td> <td>1</td> <td>PLUS</td>
						<td>АККУМ + ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Вычитание (целые)</td> <td>0000 0000 0010</td> <td>2</td> <td>MINUS</td>
						<td>АККУМ - ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Умножение (целые)</td> <td>0000 0000 0011</td> <td>3</td> <td>MULT</td>
						<td>АККУМ &middot; ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Деление (целые)</td> <td>0000 0000 0100</td> <td>4</td> <td>DIVIS</td>
						<td>АККУМ / ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Сложение (плавающая точка)</td> <td>0000 0000 1011</td> <td>11</td> <td>FPLUS</td>
						<td>АККУМ + ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Вычитание (плавающая точка)</td> <td>0000 0000 1100</td> <td>12</td> <td>FMINUS</td>
						<td>АККУМ - ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Умножение (плавающая точка)</td> <td>0000 0000 1101</td> <td>13</td> <td>FMULT</td>
						<td>АККУМ &middot; ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Деление (плавающая точка)</td> <td>0000 0000 1110</td> <td>14</td> <td>FDIVIS</td>
						<td>АККУМ / ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Логическое И</td> <td>0000 0001 0101</td> <td>21</td> <td>AND</td>
						<td>АККУМ && ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Логическое ИЛИ</td> <td>0000 0001 0110</td> <td>22</td> <td>OR</td>
						<td>АККУМ || ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Логическое НЕ</td> <td>0000 0001 0111</td> <td>23</td> <td>NOT</td>
						<td>!АККУМ</td>
					</tr>
					<tr>
						<td>Меньше (целые)</td> <td>0000 0001 1111</td> <td>31</td> <td>LESS</td>
						<td>АККУМ &lt; ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Меньше или равно (целые)</td> <td>0000 0010 0000</td> <td>32</td> <td>LESSOE</td>
						<td>АККУМ &lt;= ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Равенство (целые)</td> <td>0000 0010 0001</td> <td>33</td> <td>EQUAL</td>
						<td>АККУМ == ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Неравенство (целые)</td> <td>0000 0010 0010</td> <td>34</td> <td>NOTEQUAL</td>
						<td>АККУМ != ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Меньше (плавающая точка)</td> <td>0000 0010 1001</td> <td>41</td> <td>FLESS</td>
						<td>АККУМ &lt; ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Меньше или равно (плавающая точка)</td> <td>0000 0010 1010</td> <td>42</td> <td>FLESSOE</td>
						<td>АККУМ &lt;= ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Равенство (плавающая точка)</td> <td>0000 0010 1011</td> <td>43</td> <td>FEQUAL</td>
						<td>АККУМ == ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Неравенство (плавающая точка)</td> <td>0000 0010 1100</td> <td>44</td> <td>FNOTEQUAL</td>
						<td>АККУМ != ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Безусловный переход</td> <td>1111 1111 1001</td> <td>4089</td> <td>JUMP</td>
						<td>СЧАК выставляется на указанный номер ячейки</td>
					</tr>
					<tr>
						<td>Условный переход</td> <td>1111 1111 1010</td> <td>4090</td> <td>IFJUMP</td>
						<td>СЧАК выставляется на указанный номер ячейки, если АККУМ != 0</td>
					</tr>
					<tr>
						<td>Записать в аккумулятор</td> <td>1111 1111 1101</td> <td>4093</td> <td>LOAD</td>
						<td>АККУМ = ЯЧЕЙКА</td>
					</tr>
					<tr>
						<td>Запись в память из аккумулятора</td> <td>1111 1111 1110</td> <td>4094</td> <td>SAVE</td>
						<td>ЯЧЕЙКА = АККУМ</td>
					</tr>
					<tr>
						<td>Прекращение	выполнения</td> <td>1111 1111 1111</td> <td>4095</td> <td>STOP</td>
						<td>Прерывает последовательное выполнение программы</td>
					</tr>
				</tbody>
			</table>
		</div>
		<div>
			<h3 style="text-align:center;">Описание языка высокого уровня</h3>
			<div>
				<div class="border p-2">
					<p>
						Язык высокого уровня использует упрощённый Си-подобный синтаксис. Программы состоят из главного исполняемого блока без подпрограмм.<br>
						Внутри главного блока могут располагаться вложенные блоки ветвления или циклов. Типизация переменных строгая.<br>
						Переменные могут быть объявлены только в главном исполняемом блоке, объявление внутри блочных конструкций не допускается.<br>
						Область видимости переменной охватывает весь код после её объявления.<br>
						Инициализация переменных выполняется при объявлении, для этого может использоваться число либо другая переменная.<br>
						Использование имени уже объявленной переменной не допускается.<br>
						Имя переменной может состоять из латинских символов нижнего и верхнего регистров, знака подчёркивания и цифр, 
						но цифра не может быть первой.
					</p>
				</div>

				<div class="border p-2">
					<span>Типы данных:</span>
					<ol>
						<li>int (целое число)</li>
						<li>float (вещественное число)</li>
					</ol>
					<span>Арифметические операторы:</span>
					<ol>
						<li>+ (сложение)</li>
						<li>- (вычитание)</li>
						<li>* (умножение)</li>
						<li>/ (деление)</li>
					</ol>
					<span>Логические операторы:</span>
					<ol>
						<li>&lt; (меньше)</li>
						<li>&lt;= (меньше или равно)</li>
						<li>!= (неравенство)</li>
						<li>= (равенство)</li>
					</ol>
					<span>Специальные операторы:</span>
					<ol>
						<li>= (присваивание)</li>
						<li>; (конец операции)</li>
					</ol>
					<span>Блочные конструкции:</span>
					<ol>
						<li>while (цикл по условию)</li>
						<li>if-else (ветвление по условию, блок else опционален)</li>
					</ol>
				</div>

				<div class="border p-2">
					<p>
						Схема объявления переменной:<br>
						&lt;тип&gt; &lt;имя переменной&gt; = &lt;значение&gt;;
					</p>
					<p>
						Схема инструкции:<br>
						&lt;имя переменной&gt; = &lt;операнд 1&gt; &lt;оператор&gt; &lt;операнд 2&gt;;
					</p>
					<p>
						Схема оператора цикла:<br>
						while (&lt;операнд 1&gt; &lt;логический оператор&gt; &lt;операнд 2&gt;)<br>
						{&lt;блок инструкций&gt;}
					</p>
					<p>
						Схема оператора ветвления:<br>
						if (&lt;операнд 1&gt; &lt;логический оператор&gt; &lt;операнд 2&gt; )<br>
						{&lt;блок инструкций&gt;}<br>
						else<br>
						{&lt;блок инструкций&gt;}<br>
					</p>
				</div>
				<div class="border p-2">
					<span>Пример:</span>
					<pre>
int x = 0;
float y = 5.4;
int f = 5;
int z = 0;
float cMd = 8.0;
while ( x <= 10)
{
	x = x + 1;
	while ( 2.8 < y )
	{
		y = y - 0.4;
		if (7 < 2)
		{
			z = 5 + 2;
			cMd = cMd * 2.0;
		}
		else
		{
			z = 5 - 2;
			cMd = cMd / 2.0;
			if ( f == 5 )
			{
				f = 2;
			}
		}
	}
}
					</pre>
				</div>
			</div>
		</div>
	</div>
</body>